openapi: 3.0.1
info:
  title: Tag
  description: 'This API provides capabilities to manage Tags to be associated with Tags or APIs for faster search and categorization. It supports the following features - <br><br> 1. Adding a new Tag in a category <br> 2. Updating an existing Tag within a category, <br> 3. Fetching all Tags, <br> 4. Fetching a specific Tag, <br> 5. Delete a Tag <br> 6. Add a new Tag Category <br> 7. Fetch all Tag Categories <br> 8. Delete a Tag Category'
  termsOfService: https://www.infosys.com/terms-of-use.html
  contact:
    name: API Cloud
    email: apicloud@infosys.com
  version: 1.0.0
servers:
- url: http://apicloud-staging.ad.infosys.com:31846/apiCloud/v1
- url: https://oneclickapi-gw.imapnext.com/apiCloud/v1
- url: https://apicloud-gw.infosysapps.com/apiCloud/v1
tags:
- name: "Tag"
- name: "Tag Category"
paths:
  /tags:
    post:
      tags:
      - "Tag"
      summary: Create a new Tag
      operationId: createTag
      requestBody:
        description: Add a new Tag on API Cloud
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        201: 
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
    get:
      tags:
      - "Tag"
      summary: Fetch a list of matching Tags
      description: Retrieve a list of Tags by status and category
      operationId: fetchTags
      parameters:
      - name: status
        in: query
        description: Indicator whether Tag is active or not
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: categoryName
        in: query
        description: Category of tags
        required: false
        style: form
        explode: true
        schema:
          type: string 
          enum:
            - Domain
            - Functional
            - Technical
            - Others
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
  /tags/{tagId}:
    patch:
      tags:
      - "Tag"
      summary: Update an existing Tag
      description: Update one or more attributes of an already existing Tag
      operationId: updateTag
      parameters:
      - name: tagId
        in: path
        description: ID of the Tag to be updated
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
    delete:
      tags:
      - "Tag"
      summary: Delete an existing Tag
      description: Delete an existing Tag
      operationId: deleteTag
      parameters:
      - name: tagId
        in: path
        description: ID of the Tag to be deleted
        required: true
        schema:
          type: integer
          format: int32
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
    get:
      tags:
      - "Tag"
      summary: Fetch a specific Tag
      description: Retrieve a specific Tag based on ID
      operationId: fetchTag
      parameters:
      - name: tagId
        in: path
        description: ID of the Tag to be returned
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
  /tags/category:
    post:
      tags:
      - "Tag Category"
      summary: Create a new Tag Category
      operationId: createTagCategory
      requestBody:
        description: Add a new Tag Category on API Cloud
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCategory'
        required: true
      responses:
        201: 
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCategory'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
    get:
      tags:
      - "Tag Category"
      summary: Fetch a list of Tag Categories
      description: Retrieve a list of Tag Categories
      operationId: fetchTagCategories
      parameters:
      - name: status
        in: query
        description: Status of the tag category
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagCategory'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
  /tags/category/{categoryId}: 
    patch:
      tags:
      - "Tag Category"
      summary: Update an existing Tag Category
      description: Update an existing Tag Category
      operationId: updateTagCategory
      parameters:
      - name: categoryId
        in: path
        description: ID of the Tag Category to be returned
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Update a Tag Category on API Cloud
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCategory'
        required: true
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
    delete:
      tags:
      - "Tag Category"
      summary: Delete an existing Tag Category
      description: Delete an existing Tag Category
      operationId: deleteTagCategory
      parameters:
      - name: categoryId
        in: path
        description: ID of the Tag Category to be returned
        required: true
        schema:
          type: integer
          format: int32
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - api_key: []
components:
  schemas:
    Tag:
      type: object
      properties:
        tagId:
          type: integer
          format: int32
        tagName:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        tagDescription:
          type: string
        actionBy:
          type: string
        status: 
          type: boolean
        extension:
          type: object
          properties:
            productCount:
              type: integer
              format: int32
    TagCategory:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        actionBy:
          type: string
        status:
          type: boolean
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Authorization
      in: header
